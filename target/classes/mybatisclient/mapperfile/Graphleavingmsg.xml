<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GraphleavingmsgMapper">
  <resultMap id="BaseResultMap" type="Graphleavingmsg">
    <id column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="graphid" jdbcType="VARCHAR" property="graphid" />
    <result column="leavinguserid" jdbcType="VARCHAR" property="leavinguserid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="backup1" jdbcType="VARCHAR" property="backup1" />
    <result column="backup2" jdbcType="VARCHAR" property="backup2" />
    <result column="backup3" jdbcType="VARCHAR" property="backup3" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, graphid, leavinguserid, content, addtime, backup1, backup2, backup3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_graphleavingmsg
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_graphleavingmsg
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="addGraphleavingmsg" parameterType="pd">
    insert into tb_graphleavingmsg (uid, graphid, leavinguserid,
      content, addtime, backup1, 
      backup2, backup3)
    values (#{uid,jdbcType=VARCHAR}, #{graphid,jdbcType=VARCHAR}, #{leavinguserid,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, #{backup1,jdbcType=VARCHAR}, 
      #{backup2,jdbcType=VARCHAR}, #{backup3,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hnqj.model.Graphleavingmsg">
    update tb_graphleavingmsg
    set graphid = #{graphid,jdbcType=VARCHAR},
      leavinguserid = #{leavinguserid,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=VARCHAR},
      backup3 = #{backup3,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <!--根据任务ID查询所有Graphleavingmsg-->
  <select id="getGraphleavingmsgByGraphId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_graphleavingmsg
    where graphid = #{graphid,jdbcType=VARCHAR}
  </select>
</mapper>