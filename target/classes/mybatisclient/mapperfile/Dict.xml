<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DictMapper">
  <resultMap id="BaseResultMap" type="Dict">
    <id column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="groupname" jdbcType="VARCHAR" property="groupname" />
    <result column="keyname" jdbcType="VARCHAR" property="keyname" />
    <result column="keyvalue" jdbcType="VARCHAR" property="keyvalue" />
    <result column="parentid" jdbcType="VARCHAR" property="parentid" />
    <result column="remarket" jdbcType="VARCHAR" property="remarket" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, groupname, keyname, keyvalue, parentid, remarket
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_dict
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <select id="getDictForId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    *
    from tb_dict
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <!--分页查询所有父节点-->
  <select id="getAllDict" resultMap="BaseResultMap">
    select * from tb_dict where parentid = #{parentId} LIMIT #{offset},#{limit}
  </select>
  <!--根据树ID查询所有-->
  <select id="selectDictList" resultMap="BaseResultMap">
    select * from tb_dict where parentid = #{parentId}
  </select>
  <!--根据类型名称查询所有子类-->
  <select id="selectFilterDictList" resultMap="BaseResultMap">
    select * from tb_dict where parentid = (select DISTINCT uid from tb_dict where keyname=#{keyname,jdbcType=VARCHAR})
  </select>
  <!--查询所有-->
  <select id="selectDictLists" resultMap="BaseResultMap">
    select * from tb_dict
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_dict
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hnqj.model.Dict">
    insert into tb_dict (uid, groupname, keyname,
      keyvalue, parentid, remarket
      )
    values (#{uid,jdbcType=VARCHAR}, #{groupname,jdbcType=VARCHAR}, #{keyname,jdbcType=VARCHAR}, 
      #{keyvalue,jdbcType=VARCHAR}, #{parentid,jdbcType=VARCHAR}, #{remarket,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hnqj.model.Dict">
    update tb_dict
    set groupname = #{groupname,jdbcType=VARCHAR},
      keyname = #{keyname,jdbcType=VARCHAR},
      keyvalue = #{keyvalue,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=VARCHAR},
      remarket = #{remarket,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <!--根据value值查询指定类型的子类列表-->
  <select id="getDictForValue" resultMap="BaseResultMap">
    select * from tb_dict where parentid = (select uid from tb_dict where keyvalue=#{keyvalue,jdbcType=VARCHAR})
  </select>
</mapper>